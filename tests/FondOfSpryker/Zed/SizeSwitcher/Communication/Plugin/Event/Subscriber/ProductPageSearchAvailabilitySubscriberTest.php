<?php

namespace FondOfSpryker\Zed\SizeSwitcher\Communication\Plugin\Event\Subscriber;

use Codeception\Test\Unit;
use FondOfSpryker\Zed\SizeSwitcher\Communication\Plugin\Event\Listener\ProductPageSearchAvailabilityUpdateListener;
use Spryker\Zed\Event\Dependency\EventCollection;

class ProductPageSearchAvailabilitySubscriberTest extends Unit
{
    /**
     * @var \FondOfSpryker\Zed\SizeSwitcher\Communication\Plugin\Event\Subscriber\ProductPageSearchAvailabilitySubscriber
     */
    protected $plugin;

    /**
     * @var
     */
    protected $eventListenerMock;

    /**
     * @var \Spryker\Zed\Event\Dependency\EventCollection|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $eventCollectionMock;

    /**
     * @return void
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub

        $this->eventListenerMock = $this->getMockBuilder(ProductPageSearchAvailabilityUpdateListener::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->eventCollectionMock = $this->getMockBuilder(EventCollection::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->plugin = new ProductPageSearchAvailabilitySubscriber();
    }

    /**
     * @return void
     */
    public function testGetSubscribedEvents()
    {
        $this->eventCollectionMock->expects($this->once())
            ->method('addListenerQueued');

        $eventColletion = $this->plugin->getSubscribedEvents($this->eventCollectionMock);
        $this->assertInstanceOf(EventCollection::class, $eventColletion);
    }
}
